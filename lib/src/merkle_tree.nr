use dep::std;
use crate::LEVELS;

// Returns the merkle root of the tree from the provided leaf, path indices, siblings with poseidon hash.
pub fn compute_merkle_root(leaf: Field, path_indices: [Field; LEVELS], siblings: [Field; LEVELS]) -> Field {
    let n = siblings.len();
    let mut current = leaf;
    for i in 0..n {
        let is_right = (path_indices[i] == 1) as bool;
        let (hash_left, hash_right) = if is_right {
            (siblings[i], current)
        } else {
            (current, siblings[i])
        };
        current = std::hash::poseidon::bn254::hash_2([hash_left, hash_right]);
    };
    current
}

#[test]
fn test_compute_merkle_root() {
    let leaf = 13780856135824609486835123660791248959181113742546918549559321242116770234576;
    let path_indices = [0,0,1,1,0,1,1,0];
    let siblings = [14520510218039433773459597944105601781578483631006408988284677481489650471896,16735405162150476769165535806199980191266151907719469609340290185602038249334,11607634630385916762103142687024023731847490136503700052557112073181947753651,1094530894963466396181348105151045704221228209480186211832907007839607915796,3284044843315180235425920080565507273212761221150458610158014968492963231945,4641050443441813769099735638332230934538706616831662404912867311564816535000,13308983921089595976695015024214414181663897095192147251475586735720084500210,12699940109500066053124654505808015855541980379149317240855603319465855478536];
    let root = compute_merkle_root(leaf, path_indices, siblings);
    assert(root == 3507270469832926990571112645872386345557614009066375654691910206440851534809);
}

#[test]
fn test_real_merkle_root() {
    let leaf = 3376272237122168314324732342510748316127412315154233086617893294216180756228;
    let path_indices = [0,0,0,0,0,0,0,0];
    let siblings = [12181380747766530663019567607642183183842923227107503250029079799455572184768,14752333704901535729870671529802743390978931851983497868673528090961169705309,16538135409515176547194568220928820916682786764828918280336228751737583509415,11286972368698509976183087595462810875513684078608517520839298933882497716792,3607627140608796879659380071776844901612302623152076817094415224584923813162,19712377064642672829441595136074946683621277828620209496774504837737984048981,20775607673010627194014556968476266066927294572720319469184847051418138353016,3396914609616007258851405644437304192397291162432396347162513310381425243293];
    let root = compute_merkle_root(leaf, path_indices, siblings);
    assert(root == 3693852034816220969980398025931646744713742489852125909138985185751997118833);
}